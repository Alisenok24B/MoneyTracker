{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/controllers/auth.controller.ts","webpack:///../../libs/contracts/src/index.ts","webpack:///../../libs/contracts/src/lib/account/account.login.ts","webpack:///external commonjs \"class-validator\"","webpack:///../../libs/contracts/src/lib/account/account.register.ts","webpack:///../../libs/contracts/src/lib/account/account.user-info.ts","webpack:///../../libs/contracts/src/lib/account/account.change-profile.ts","webpack:///../../libs/contracts/src/lib/wallet/wallet.create-account.ts","webpack:///../../libs/interfaces/src/index.ts","webpack:///../../libs/interfaces/src/lib/user.interface.ts","webpack:///../../libs/interfaces/src/lib/auth.interface.ts","webpack:///../../libs/interfaces/src/lib/events.interface.ts","webpack:///../../libs/interfaces/src/lib/account.interface.ts","webpack:///external commonjs \"class-transformer\"","webpack:///../../libs/contracts/src/lib/wallet/wallet.update-account.ts","webpack:///../../libs/contracts/src/lib/wallet/wallet.get-account.ts","webpack:///../../libs/contracts/src/lib/wallet/wallet.list-accounts.ts","webpack:///../../libs/contracts/src/lib/wallet/wallet.delete-account.ts","webpack:///external commonjs \"nestjs-rmq\"","webpack:///./src/app/dtos/login.dto.ts","webpack:///./src/app/dtos/register.dto.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/app/configs/rmq.config.ts","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///./src/app/configs/jwt.config.ts","webpack:///external commonjs \"@nestjs/passport\"","webpack:///./src/app/controllers/user.controller.ts","webpack:///./src/app/guards/jwt.guard.ts","webpack:///./src/app/guards/user.decorator.ts","webpack:///./src/app/dtos/change-profile.dto.ts","webpack:///./src/app/strategies/jwt.strategy.ts","webpack:///external commonjs \"passport-jwt\"","webpack:///./src/app/controllers/wallet.controller.ts","webpack:///./src/app/dtos/create-account.dto.ts","webpack:///./src/app/dtos/update-account.dto.ts","webpack:///./src/app/dtos/list-accounts.dto.ts","webpack:///./src/app/dtos/account-id.dto.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { AuthController } from './controllers/auth.controller';\nimport { ConfigModule } from '@nestjs/config';\nimport { RMQModule } from 'nestjs-rmq';\nimport { getRMQConfig } from './configs/rmq.config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { getJWTConfig } from './configs/jwt.config';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserController } from './controllers/user.controller';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { WalletController } from './controllers/wallet.controller';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({envFilePath: 'envs/.api.env', isGlobal: true}),\n    RMQModule.forRootAsync(getRMQConfig()),\n    JwtModule.registerAsync(getJWTConfig()),\n    PassportModule.register({defaultStrategy: 'jwt'})\n  ],\n  controllers: [AuthController, UserController, WalletController],\n  providers: [\n    JwtStrategy\n  ]\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","import { Body, Controller, Post, UnauthorizedException } from '@nestjs/common';\nimport {AccountLogin, AccountRegister} from '@moneytracker/contracts';\nimport { RMQService } from 'nestjs-rmq';\nimport { LoginDto } from '../dtos/login.dto';\nimport { RegisterDto } from '../dtos/register.dto';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private readonly rmqService: RMQService\n    ) {}\n\n    @Post('register')\n    async register(@Body() dto: RegisterDto) {\n        try {\n            return await this.rmqService.send<AccountRegister.Request, AccountRegister.Response>(AccountRegister.topic, dto);\n        } catch(e) {\n            if (e instanceof Error) {\n                throw new UnauthorizedException(e.message);\n            }\n        }\n    }\n\n    @Post('login')\n    async login(@Body() dto: LoginDto) {\n        try {\n            return await this.rmqService.send<AccountLogin.Request, AccountLogin.Response>(AccountLogin.topic, dto);\n        } catch(e) {\n            if (e instanceof Error) {\n                throw new UnauthorizedException(e.message);\n            }\n        }\n    }\n}\n","export * from './lib/account/account.login';\nexport * from './lib/account/account.register';\nexport * from './lib/account/account.user-info';\nexport * from './lib/account/account.change-profile';\nexport * from './lib/wallet/wallet.create-account';\nexport * from './lib/wallet/wallet.update-account';\nexport * from './lib/wallet/wallet.get-account';\nexport * from './lib/wallet/wallet.list-accounts';\nexport * from './lib/wallet/wallet.delete-account';\n\n","import { IsEmail, IsString } from 'class-validator';\n\nexport namespace AccountLogin {\n    export const topic = 'account.login.command';\n\n    export class Request {\n        @IsEmail()\n        email: string;\n\n        @IsString()\n        password: string;\n    }\n\n    export class Response {\n        access_token: string;\n    }\n}\n","module.exports = require(\"class-validator\");","import { IsEmail, IsOptional, IsString } from \"class-validator\";\n\nexport namespace AccountRegister {\n    export const topic = 'account.register.command';\n\n    export class Request {\n        @IsEmail()\n        email: string;\n\n        @IsString()\n        password: string;\n\n        @IsOptional()\n        @IsString()\n        displayName?: string;\n    }\n\n    export class Response {\n        email: string;\n    }\n}\n","import { IsString } from 'class-validator';\nimport {IUser} from '@moneytracker/interfaces'\n\nexport namespace AccountUserInfo {\n    export const topic = 'account.user-info.query';\n\n    export class Request {\n        @IsString()\n        id: string;\n    }\n\n    export class Response {\n        profile: Omit<IUser, 'passwordHash'>;\n    }\n}\n","import { IsObject, IsString } from 'class-validator';\nimport {IUser} from '@moneytracker/interfaces'\n\nexport namespace AccountChangeProfile {\n    export const topic = 'account.change-profile.command';\n\n    export class Request {\n        @IsString()\n        id: string;\n\n        @IsObject()\n        user: Pick<IUser, 'displayName'>;\n    }\n\n    export class Response {}\n}\n","import { IsString, IsIn, IsOptional, IsNumber, ValidateNested, IsArray } from 'class-validator';\nimport { BillingCycleType, ICreditCardDetails } from '@moneytracker/interfaces';\nimport { Type } from 'class-transformer';\n\nexport namespace AccountCreate {\n  export const topic = 'account.create.command';\n\n  class CreditDto implements ICreditCardDetails {\n    @IsNumber() creditLimit: number;\n    @IsNumber() gracePeriodDays: number;\n    @IsIn(['fixed','calendar','perPurchase'] as BillingCycleType[]) billingCycleType: BillingCycleType;\n    @IsOptional() @IsNumber() billingCycleLengthDays?: number;\n    @IsOptional() @IsNumber() billingCycleStartDayOfMonth?: number;\n    @IsNumber() paymentPeriodDays: number;\n    @IsNumber() interestRate: number;\n    @IsOptional() @IsNumber() annualFee?: number;\n    @IsOptional() @IsNumber() cashWithdrawalFeePercent?: number;\n    @IsOptional() @IsNumber() cashWithdrawalFeeFixed?: number;\n    @IsOptional() @IsNumber() cashWithdrawalLimitPerMonth?: number;\n    @IsOptional() @IsNumber() cashbackPercentMax?: number;\n    @IsOptional() @IsArray() @IsString({ each: true }) cashbackCategories?: string[];\n  }\n\n  export class Request {\n    @IsString() userId: string;\n    @IsString() name: string;\n    @IsIn(['savings', 'debit', 'creditCard']) type: string;\n    @IsOptional() @IsString() currency?: string;\n\n    // Если credit\n    @IsOptional()\n    @ValidateNested()\n    @Type(() => CreditDto)\n    creditDetails?: CreditDto;\n  }\n\n  export class Response {\n    accountId: string;\n  }\n}\n","export * from './lib/user.interface';\nexport * from './lib/auth.interface';\nexport * from './lib/events.interface';\nexport * from './lib/account.interface';\n","export interface IUser {\n    _id?: string;\n    displayName?: string;\n    email: string;\n    passwordHash: string;\n}\n","export interface IJWTPayload {\n    id: string;\n}","export interface IDomainEvent {\n    topic: string;\n    data: unknown;\n}","export enum AccountType {\n  Savings = 'savings',\n  Debit = 'debit',\n  CreditCard = 'creditCard',\n}\n\n// Типы расчётного периода\nexport type BillingCycleType =\n  | 'fixed'       // фиксированный цикл N дней от даты выписки\n  | 'calendar'    // календарный месяц\n  | 'perPurchase' // индивидуальный период от даты покупки\n\n// Детали кредитной карты / кредитного счёта\nexport interface ICreditCardDetails {\n  // лимит\n  creditLimit: number;\n\n  // льготный период (беспроцентный)\n  gracePeriodDays: number;\n\n  // расчётный период\n  billingCycleType: BillingCycleType;\n  // если fixed:\n  billingCycleLengthDays?: number;\n  // если calendar:\n  billingCycleStartDayOfMonth?: number;\n  // если perPurchase — не нужно дополнительных полей\n\n  // платёжный период\n  paymentPeriodDays: number;\n\n  // процентная ставка (годовых)\n  interestRate: number;\n\n  // годовая комиссия\n  annualFee?: number;\n\n  // комиссия за снятие наличных\n  cashWithdrawalFeePercent?: number;\n  cashWithdrawalFeeFixed?: number;\n  cashWithdrawalLimitPerMonth?: number;\n\n  // кэшбэк (max% и категории)\n  cashbackPercentMax?: number;\n  cashbackCategories?: string[];\n}\n\n// Общий интерфейс для сущности «Счёт»\nexport interface IAccount {\n  _id?: string;\n  userId: string;         // чей это счёт\n  name: string;           // произвольное название\n  type: AccountType;\n  balance: number;\n  currency: string;\n  creditDetails?: ICreditCardDetails;  // только для type = 'credit'\n  deletedAt?: Date;        // soft-delete\n}\n","module.exports = require(\"class-transformer\");","import {\n  IsString,\n  IsOptional,\n  IsIn,\n  ValidateNested,\n  IsNumber,\n  IsArray,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { BillingCycleType, ICreditCardDetails } from '@moneytracker/interfaces';\n\nexport namespace AccountUpdate {\n  export const topic = 'wallet.update-account.command';\n\n  class CreditDto implements Partial<ICreditCardDetails> {\n    @IsOptional() @IsNumber() creditLimit?: number;\n    @IsOptional() @IsNumber() gracePeriodDays?: number;\n    @IsOptional()\n    @IsIn(Object.values(['fixed','calendar','perPurchase']) as BillingCycleType[])\n    billingCycleType?: BillingCycleType;\n    @IsOptional() @IsNumber() billingCycleLengthDays?: number;\n    @IsOptional() @IsNumber() billingCycleStartDayOfMonth?: number;\n    @IsOptional() @IsNumber() paymentPeriodDays?: number;\n    @IsOptional() @IsNumber() interestRate?: number;\n    @IsOptional() @IsNumber() annualFee?: number;\n    @IsOptional() @IsNumber() cashWithdrawalFeePercent?: number;\n    @IsOptional() @IsNumber() cashWithdrawalFeeFixed?: number;\n    @IsOptional() @IsNumber() cashWithdrawalLimitPerMonth?: number;\n    @IsOptional() @IsNumber() cashbackPercentMax?: number;\n    @IsOptional() @IsArray() @IsString({ each: true }) cashbackCategories?: string[];\n  }\n\n  export class Request {\n    @IsString()\n    userId: string;\n\n    @IsString()\n    id: string;\n\n    @IsOptional()\n    @IsString()\n    name?: string;\n\n    @IsOptional()\n    @IsString()\n    currency?: string;\n\n    @IsOptional()\n    @ValidateNested()\n    @Type(() => CreditDto)\n    creditDetails?: CreditDto;\n  }\n\n  export class Response {}\n}\n","import { IsString } from 'class-validator';\n\nexport namespace AccountGet {\n  export const topic = 'account.get.query';\n\n  export class Request {\n    @IsString() userId: string;\n    @IsString() id: string;\n  }\n\n  export class Response {\n    account: any;  // здесь IAccount\n  }\n}\n","import { IsString, IsOptional, IsArray } from 'class-validator';\n\nexport namespace AccountList {\n  export const topic = 'account.list.query';\n\n  export class Request {\n    @IsString() userId: string;\n    @IsOptional() @IsArray() peers?: string[];  // для совместного доступа\n  }\n\n  export class Response {\n    accounts: any[];  // в теле будут объекты IAccount, но RMQ-контракты обычно не типизируют глубоко\n  }\n}\n","import { IsString } from 'class-validator';\n\nexport namespace AccountDelete {\n  export const topic = 'account.delete.command';\n\n  export class Request {\n    @IsString() userId: string;\n    @IsString() id: string;\n  }\n\n  export class Response {}\n}\n","module.exports = require(\"nestjs-rmq\");","import { IsEmail, IsString } from \"class-validator\";\n\nexport class LoginDto {\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    password: string;\n}\n","import { IsEmail, IsOptional, IsString } from \"class-validator\";\n\nexport class RegisterDto {\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    password: string;\n\n    @IsOptional()\n    @IsString()\n    displayName?: string;\n}","module.exports = require(\"@nestjs/config\");","import { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { IRMQServiceAsyncOptions } from \"nestjs-rmq\";\n\nexport const getRMQConfig = (): IRMQServiceAsyncOptions => ({\n    inject: [ConfigService],\n    imports: [ConfigModule],\n    useFactory: (configService: ConfigService) => ({\n        exchangeName: configService.get('AMQP_EXCHANGE') ?? '',\n        connections: [\n            {\n                login: configService.get('AMQP_USER') ?? '',\n                password: configService.get('AMQP_PASSWORD') ?? '',\n                host: configService.get('AMQP_HOSTNAME') ?? ''\n            }\n        ],\n        prefetchCount: 32,\n        serviceName: 'moneytracker-account'\n    })\n})","module.exports = require(\"@nestjs/jwt\");","import { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { JwtModuleAsyncOptions } from \"@nestjs/jwt\";\n\nexport const getJWTConfig = (): JwtModuleAsyncOptions => ({\n    imports: [ConfigModule],\n    inject: [ConfigService],\n    useFactory: (ConfigService: ConfigService) => ({\n        secret: ConfigService.get('JWT_SECRET')\n    })\n})","module.exports = require(\"@nestjs/passport\");","import { Body, Controller, Get, Post, UseGuards } from '@nestjs/common';\nimport { JWTAuthGuard } from '../guards/jwt.guard';\nimport { UserId } from '../guards/user.decorator';\nimport { RMQService } from 'nestjs-rmq';\nimport { AccountUserInfo, AccountChangeProfile } from '@moneytracker/contracts';\nimport { ChangeProfileDto } from '../dtos/change-profile.dto';\n\n@Controller('user')\nexport class UserController {\n    constructor(private readonly rmqService: RMQService) {}\n\n  @UseGuards(JWTAuthGuard)\n  @Get('info')\n  async info(@UserId() userId: string) {\n    return this.rmqService.send<\n      AccountUserInfo.Request,\n      AccountUserInfo.Response\n    >(AccountUserInfo.topic, { id: userId });\n  }\n\n  @UseGuards(JWTAuthGuard)\n  @Post('change-profile')\n  async changeProfile(\n    @UserId() userId: string,\n    @Body() dto: ChangeProfileDto,\n  ) {\n    return this.rmqService.send<\n      AccountChangeProfile.Request,\n      AccountChangeProfile.Response\n    >(AccountChangeProfile.topic, {\n      id: userId,\n      user: { displayName: dto.displayName },\n    });\n  }\n}\n","import { AuthGuard } from \"@nestjs/passport\";\n\nexport class JWTAuthGuard extends AuthGuard('jwt') {}","import { createParamDecorator, ExecutionContext } from \"@nestjs/common\";\n\nexport const UserId = createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n    return ctx.switchToHttp().getRequest()?.user;\n})","import { IsString } from \"class-validator\";\n\nexport class ChangeProfileDto {\n    @IsString()\n    displayName: string;\n}","import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Strategy, ExtractJwt } from \"passport-jwt\";\nimport {IJWTPayload} from '@moneytracker/interfaces';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(configService: ConfigService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: true,\n            secretOrKey: configService.get('JWT_SECRET')\n        })\n    }\n\n    async validate({id}: IJWTPayload) {\n        return id;\n    }\n}","module.exports = require(\"passport-jwt\");","import {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Delete,\n  Param,\n  Body,\n  Query,\n  UseGuards,\n  BadRequestException,\n} from '@nestjs/common';\nimport { RMQService } from 'nestjs-rmq';\nimport { JWTAuthGuard } from '../guards/jwt.guard';\nimport { UserId } from '../guards/user.decorator';\n\nimport {\n  AccountCreate,\n  AccountList,\n  AccountGet,\n  AccountUpdate,\n  AccountDelete,\n} from '@moneytracker/contracts';\n\nimport { CreateAccountDto } from '../dtos/create-account.dto';\nimport { UpdateAccountDto } from '../dtos/update-account.dto';\nimport { ListAccountsDto } from '../dtos/list-accounts.dto';\nimport { AccountIdDto } from '../dtos/account-id.dto';\nimport { AccountType } from '@moneytracker/interfaces';\n\n@Controller('accounts')\nexport class WalletController {\n  constructor(private readonly rmqService: RMQService) {}\n\n  // 1) Получить список счетов (своих и peers), возвращаем только нужные поля\n  @UseGuards(JWTAuthGuard)\n  @Get()\n  async list(\n    @UserId() userId: string,\n    @Query() dto: ListAccountsDto,\n  ) {\n    const response = await this.rmqService.send<\n      AccountList.Request,\n      AccountList.Response\n    >(AccountList.topic, { userId, peers: dto.peers || [] });\n\n    const sanitized = response.accounts.map(account => {\n      const { _id, name, type, balance, currency, creditDetails } = account;\n      if (type === AccountType.CreditCard) {\n        return { _id, name, type, balance, currency, creditDetails };\n      }\n      return { _id, name, type, balance, currency };\n    });\n\n    return { accounts: sanitized };\n  }\n\n  // 2) Создать новый счет\n  @UseGuards(JWTAuthGuard)\n  @Post()\n  async create(\n    @UserId() userId: string,\n    @Body() dto: CreateAccountDto,\n  ) {\n    // creditDetails обязательны для creditCard и запрещены для остальных\n    if (dto.type === AccountType.CreditCard && !dto.creditDetails) {\n      throw new BadRequestException('For creditCard must to write creditDetails');\n    }\n    if (dto.creditDetails && dto.type !== AccountType.CreditCard) {\n      throw new BadRequestException('creditDetails are only allowed for creditCard accounts');\n    }\n\n    return this.rmqService.send<AccountCreate.Request, AccountCreate.Response>(\n      AccountCreate.topic,\n      { userId, ...dto },\n    );\n  }\n\n  // 3) Получить один счет по ID, возвращая только определённые поля\n  @UseGuards(JWTAuthGuard)\n  @Get(':id')\n  async getById(\n    @UserId() userId: string,\n    @Param() params: AccountIdDto,\n  ) {\n    const response = await this.rmqService.send<\n      AccountGet.Request,\n      AccountGet.Response\n    >(AccountGet.topic, { userId, id: params.id });\n    const { account } = response;\n    const { _id, name, type, balance, currency, creditDetails } = account;\n    if (type === AccountType.CreditCard) {\n      return { account: { _id, name, type, balance, currency, creditDetails } };\n    }\n    return { account: { _id, name, type, balance, currency } };\n  }\n\n  // 4) Обновить счет по ID\n  @UseGuards(JWTAuthGuard)\n  @Patch(':id')\n  async update(\n    @UserId() userId: string,\n    @Param() params: AccountIdDto,\n    @Body() dto: UpdateAccountDto,\n  ) {\n    return this.rmqService.send<\n      AccountUpdate.Request,\n      AccountUpdate.Response\n    >(AccountUpdate.topic, {\n      userId,\n      id: params.id,\n      ...dto,\n    });\n  }\n\n  // 5) Удалить счет (soft-delete) по ID\n  @UseGuards(JWTAuthGuard)\n  @Delete(':id')\n  async delete(\n    @UserId() userId: string,\n    @Param() params: AccountIdDto,\n  ) {\n    return this.rmqService.send<\n      AccountDelete.Request,\n      AccountDelete.Response\n    >(AccountDelete.topic, {\n      userId,\n      id: params.id,\n    });\n  }\n}","import { IsString, IsIn, IsOptional, ValidateNested, IsNumber, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { AccountType, BillingCycleType, ICreditCardDetails } from '@moneytracker/interfaces';\n\nclass CreditDetailsDto implements ICreditCardDetails {\n  @IsNumber()\n  creditLimit: number;\n\n  @IsNumber()\n  gracePeriodDays: number;\n\n  @IsIn(['fixed','calendar','perPurchase'])\n  billingCycleType: BillingCycleType;\n\n  @IsOptional()\n  @IsNumber()\n  billingCycleLengthDays?: number;\n\n  @IsOptional()\n  @IsNumber()\n  billingCycleStartDayOfMonth?: number;\n\n  @IsNumber()\n  paymentPeriodDays: number;\n\n  @IsNumber()\n  interestRate: number;\n\n  @IsOptional()\n  @IsNumber()\n  annualFee?: number;\n\n  @IsOptional()\n  @IsNumber()\n  cashWithdrawalFeePercent?: number;\n\n  @IsOptional()\n  @IsNumber()\n  cashWithdrawalFeeFixed?: number;\n\n  @IsOptional()\n  @IsNumber()\n  cashWithdrawalLimitPerMonth?: number;\n\n  @IsOptional()\n  @IsNumber()\n  cashbackPercentMax?: number;\n\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  cashbackCategories?: string[];\n}\n\nexport class CreateAccountDto {\n  @IsString()\n  name: string;\n\n  @IsIn(Object.values(AccountType))\n  type: AccountType;\n\n  @IsOptional()\n  @IsString()\n  currency?: string;\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreditDetailsDto)\n  creditDetails?: CreditDetailsDto;\n}","import { IsString, IsIn, IsOptional, ValidateNested, IsNumber, IsArray } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { AccountType, BillingCycleType, ICreditCardDetails } from '@moneytracker/interfaces';\n\nclass CreditDetailsUpdateDto implements Partial<ICreditCardDetails> {\n  @IsOptional() @IsNumber() creditLimit?: number;\n  @IsOptional() @IsNumber() gracePeriodDays?: number;\n  @IsOptional() @IsIn(['fixed','calendar','perPurchase']) billingCycleType?: BillingCycleType;\n  @IsOptional() @IsNumber() billingCycleLengthDays?: number;\n  @IsOptional() @IsNumber() billingCycleStartDayOfMonth?: number;\n  @IsOptional() @IsNumber() paymentPeriodDays?: number;\n  @IsOptional() @IsNumber() interestRate?: number;\n  @IsOptional() @IsNumber() annualFee?: number;\n  @IsOptional() @IsNumber() cashWithdrawalFeePercent?: number;\n  @IsOptional() @IsNumber() cashWithdrawalFeeFixed?: number;\n  @IsOptional() @IsNumber() cashWithdrawalLimitPerMonth?: number;\n  @IsOptional() @IsNumber() cashbackPercentMax?: number;\n  @IsOptional() @IsArray() @IsString({ each: true }) cashbackCategories?: string[];\n}\n\nexport class UpdateAccountDto {\n  @IsOptional() @IsString() name?: string;\n  @IsOptional() @IsString() currency?: string;\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreditDetailsUpdateDto)\n  creditDetails?: CreditDetailsUpdateDto;\n}\n","import { IsOptional, IsArray, IsString } from 'class-validator';\n\nexport class ListAccountsDto {\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  peers?: string[];\n}\n","import { IsString } from 'class-validator';\n\nexport class AccountIdDto {\n  @IsString()\n  id: string;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n  const port = process.env.PORT || 3333;\n  await app.listen(port);\n  Logger.log(\n    `🚀 API is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}
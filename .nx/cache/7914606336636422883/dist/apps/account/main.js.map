{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/app/app.controller.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/user/user.module.ts","webpack:///external commonjs \"@nestjs/mongoose\"","webpack:///./src/app/user/models/user.model.ts","webpack:///external commonjs \"mongoose\"","webpack:///../../libs/interfaces/src/index.ts","webpack:///../../libs/interfaces/src/lib/user.interface.ts","webpack:///../../libs/interfaces/src/lib/auth.interface.ts","webpack:///./src/app/user/repositories/user.repository.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.controller.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/user/entities/user.entity.ts","webpack:///external commonjs \"bcryptjs\"","webpack:///external commonjs \"@nestjs/jwt\"","webpack:///external commonjs \"nestjs-rmq\"","webpack:///../../libs/contracts/src/index.ts","webpack:///../../libs/contracts/src/lib/account/account.login.ts","webpack:///external commonjs \"class-validator\"","webpack:///../../libs/contracts/src/lib/account/account.register.ts","webpack:///./src/app/configs/jwt.config.ts","webpack:///external commonjs \"@nestjs/config\"","webpack:///./src/app/configs/mongo.config.ts","webpack:///./src/app/configs/rmq.config.ts","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UserModule } from './user/user.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { getMongoConfig } from './configs/mongo.config';\nimport { RMQModule } from 'nestjs-rmq';\nimport { getRMQConfig } from './configs/rmq.config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({isGlobal: true, envFilePath: 'envs/.account.env'}), \n    RMQModule.forRootAsync(getRMQConfig()),\n    UserModule, \n    AuthModule,\n    MongooseModule.forRootAsync(getMongoConfig())\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getData() {\n    return this.appService.getData();\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string } {\n    return { message: 'Hello API' };\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './models/user.model';\nimport { UserRepository } from './repositories/user.repository';\n\n@Module({\n    imports: [MongooseModule.forFeature([\n        {name: User.name, schema: UserSchema}\n    ])],\n    providers: [UserRepository],\n    exports: [UserRepository]\n})\nexport class UserModule {}\n","module.exports = require(\"@nestjs/mongoose\");","import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport { IUser, UserRole } from '@moneytracker/interfaces';\n\n@Schema()\nexport class User extends Document implements IUser {\n  override _id: string; // Переопределение _id как string\n\n  @Prop()\n  displayName?: string;\n\n  @Prop({ required: true })\n  email: string;\n\n  @Prop({ required: true })\n  passwordHash: string;\n\n  @Prop({ required: true, enum: UserRole, type: String, default: UserRole.Student })\n  role: UserRole;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);","module.exports = require(\"mongoose\");","export * from './lib/user.interface';\nexport * from './lib/auth.interface';\n","export enum UserRole {\n    Teacher = 'Teacher',\n    Student = 'Student'\n}\n\nexport interface IUser {\n    _id?: string;\n    displayName?: string;\n    email: string;\n    passwordHash: string;\n    role: UserRole;\n}","export interface IJWTPayload {\n    id: string;\n}","import { Model } from \"mongoose\";\nimport { User } from \"../models/user.model\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { Injectable } from \"@nestjs/common\";\nimport { UserEntity } from \"../entities/user.entity\";\n\n@Injectable()\nexport class UserRepository {\n    constructor(\n        @InjectModel(User.name) private readonly userModel: Model<User>\n    ) {}\n\n    async createUser(user: UserEntity) {\n        const newUser = new this.userModel(user);\n        return newUser.save();\n    }\n\n    async findUser(email: string) {\n        return this.userModel.findOne({email}).exec();\n    }\n\n    async deleteUser(email: string) {\n        this.userModel.deleteOne({email}).exec();\n    }\n}","import { Module } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { UserModule } from '../user/user.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { getJWTConfig } from '../configs/jwt.config';\n\n@Module({\n  imports: [UserModule, JwtModule.registerAsync(getJWTConfig())],\n  controllers: [AuthController],\n  providers: [AuthService],\n})\nexport class AuthModule {}\n","import { Body, Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RMQRoute, RMQValidate } from 'nestjs-rmq';\nimport {AccountLogin, AccountRegister} from '@moneytracker/contracts';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private readonly authService: AuthService\n    ) {}\n\n    @RMQValidate()\n    @RMQRoute(AccountRegister.topic)\n    async register(@Body() dto: AccountRegister.Request): Promise<AccountRegister.Response> {\n        return this.authService.register(dto);\n    }\n\n    @RMQValidate()\n    @RMQRoute(AccountLogin.topic)\n    async login(@Body() {email, password}: AccountLogin.Request): Promise<AccountLogin.Response> {\n        const { id } = await this.authService.validateUser(email, password);\n        return this.authService.login(id.toString());\n    }\n}\n","import { Injectable } from '@nestjs/common';\nimport { UserRepository } from '../user/repositories/user.repository';\nimport { UserEntity } from '../user/entities/user.entity';\nimport { UserRole } from '@moneytracker/interfaces';\nimport { JwtService } from '@nestjs/jwt';\nimport { AccountRegister } from '@moneytracker/contracts';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private readonly userRepository: UserRepository,\n        private readonly jwtService: JwtService\n    ) {}\n\n    async register({email, password, displayName}: AccountRegister.Request) {\n        const oldUser = await this.userRepository.findUser(email);\n        if (oldUser) {\n            throw new Error('Такой пользователь уже зарегистрирован');\n        }\n        const newUserEntity = await new UserEntity({\n            displayName,\n            email,\n            passwordHash: '',\n            role: UserRole.Student\n        }).setPassword(password);\n        const newUser = await this.userRepository.createUser(newUserEntity);\n        return {email: newUser.email}\n    }\n\n    async validateUser(email: string, password: string) {\n        const user = await this.userRepository.findUser(email);\n        if (!user) {\n            throw new Error('Неверный логин или пароль');\n        }\n        const userEntity = new UserEntity(user);\n        const isCorrectPassword = await userEntity.validatePassword(password);\n        if (!isCorrectPassword) {\n            throw new Error('Неверный логин или пароль');\n        }\n        return {id: user._id};\n    }\n\n    async login(id: string) {\n        return {\n            access_token: await this.jwtService.signAsync({id})\n        }\n    }\n}\n","import { IUser, UserRole } from \"@moneytracker/interfaces\";\nimport { compare, genSalt, hash } from \"bcryptjs\";\n\nexport class UserEntity implements IUser {\n    _id?: string;\n    displayName?: string;\n    email: string;\n    passwordHash: string;\n    role: UserRole;\n\n    constructor(user: IUser) {\n      this._id = user._id;\n      this.displayName = user.displayName;\n      this.email = user.email;\n      this.role = user.role;\n    }\n\n    public async setPassword(password: string) {\n        const salt = await genSalt(10);\n        this.passwordHash = await hash(password, salt);\n        return this;\n    }\n\n    public validatePassword(password: string) {\n        return compare(password, this.passwordHash);\n    }\n}","module.exports = require(\"bcryptjs\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"nestjs-rmq\");","export * from './lib/account/account.login';\nexport * from './lib/account/account.register';\n","import { IsEmail, IsString } from 'class-validator';\n\nexport namespace AccountLogin {\n    export const topic = 'account.login.command';\n\n    export class Request {\n        @IsEmail()\n        email: string;\n\n        @IsString()\n        password: string;\n    }\n\n    export class Response {\n        access_token: string;\n    }\n}\n","module.exports = require(\"class-validator\");","import { IsEmail, IsOptional, IsString } from \"class-validator\";\n\nexport namespace AccountRegister {\n    export const topic = 'account.register.command';\n\n    export class Request {\n        @IsEmail()\n        email: string;\n\n        @IsString()\n        password: string;\n\n        @IsOptional()\n        @IsString()\n        displayName?: string;\n    }\n\n    export class Response {\n        email: string;\n    }\n}\n","import { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { JwtModuleAsyncOptions } from \"@nestjs/jwt\";\n\nexport const getJWTConfig = (): JwtModuleAsyncOptions => ({\n    imports: [ConfigModule],\n    inject: [ConfigService],\n    useFactory: (ConfigService: ConfigService) => ({\n        secret: ConfigService.get('JWT_SECRET')\n    })\n})","module.exports = require(\"@nestjs/config\");","import { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { MongooseModuleAsyncOptions } from \"@nestjs/mongoose\";\n\nexport const getMongoConfig = (): MongooseModuleAsyncOptions => {\n    return {\n        useFactory: (configService: ConfigService) => ({\n            uri: getMongoString(configService)\n        }),\n        inject: [ConfigService],\n        imports: [ConfigModule]\n    }\n}\n\nconst getMongoString = (configService: ConfigService) => \n    \"mongodb://\" +\n    configService.get(\"MONGO_LOGIN\") +\n    \":\" +\n    configService.get(\"MONGO_PASSWORD\") +\n    \"@\" +\n    configService.get(\"MONGO_HOST\") +\n    \":\" +\n    configService.get(\"MONGO_PORT\") +\n    \"/\" +\n    configService.get(\"MONGO_DATABASE\") +\n    \"?authSource=\" +\n    configService.get(\"MONGO_AUTHDATABASE\");\n","import { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { IRMQServiceAsyncOptions } from \"nestjs-rmq\";\n\nexport const getRMQConfig = (): IRMQServiceAsyncOptions => ({\n    inject: [ConfigService],\n    imports: [ConfigModule],\n    useFactory: (configService: ConfigService) => ({\n        exchangeName: configService.get('AMQP_EXCHANGE') ?? '',\n        connections: [\n            {\n                login: configService.get('AMQP_USER') ?? '',\n                password: configService.get('AMQP_PASSWORD') ?? '',\n                host: configService.get('AMQP_HOSTNAME') ?? ''\n            }\n        ],\n        queueName: configService.get('AMQP_QUEUE'),\n        prefetchCount: 32,\n        serviceName: 'purple-account'\n    })\n})","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.init();\n  Logger.log(\n    `🚀 Application is running`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}